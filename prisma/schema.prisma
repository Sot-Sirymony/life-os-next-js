// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  goals     Goal[]
  tasks     Task[]
  preferences UserPreferences?
}

model UserPreferences {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  theme     String   @default("light")
  notifications Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Goal {
  id          String   @id @default(uuid())
  title       String
  description String?
  category    String
  status      String   @default("Not Started")
  progress    Int      @default(0)
  timeframe   String   @default("Short")
  priority    String   @default("Medium")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      String   @default("pending")
  priority    String   @default("medium")
  timeEstimate Int?
  tools       String?
  aiIntegration Boolean @default(false)
  optimizationSuggestions String?
  scheduledTime DateTime?
  goalId      String?
  goal        Goal?    @relation(fields: [goalId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
